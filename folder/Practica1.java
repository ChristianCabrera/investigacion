/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Navarro.folder;

import java.sql.Timestamp;
import java.txt.SimpleDateFormat;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.nio.Buffer;
import static java.nio.file.Files.write;
import static java.nio.file.Files.write;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;


public class Practica1 extends javax.swing.JFrame {

    private Editor e;
    int cont = 0;

    /**
     * Creates new form Practica1
     */
    public Practica1() {
        initComponents();
        JFileChooser selector = new JFileChooser(new File (""));
        FileFilter filtro = null;
        selector.addChoosableFileFilter(filtro);
        /**Practica1 = new File();
        selector=new JFileChooser (new File(c:));
        filtro = new FileNameEstensionFilter("Archivo planos","txt","java");
        selector.addChoosableFileFilter(filtro);
        javax.swing.tree.AbstractLayoutCache.DefaultNutableTreeNode treee*/
        //File raiz=
        //MiNodo treeNode5 = new Mi nodo
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        BotonNuevo = new javax.swing.JButton();
        abrir = new javax.swing.JButton();
        BotonGuardar = new javax.swing.JButton();
        BotonGuardarComo = new javax.swing.JButton();
        BotonGuardarTodo = new javax.swing.JButton();
        BotonCerrar = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        TBPContedors = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);

        jTabbedPane1.setBackground(new java.awt.Color(0, 0, 102));

        jPanel3.setBackground(new java.awt.Color(102, 0, 0));

        BotonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Navarro/folder/vacio.png"))); // NOI18N
        BotonNuevo.setText("N");
        BotonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonNuevoActionPerformed(evt);
            }
        });
        jPanel3.add(BotonNuevo);

        abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Navarro/folder/folder-open-icon.png"))); // NOI18N
        abrir.setText("A");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        jPanel3.add(abrir);

        BotonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Navarro/folder/Guardar.png"))); // NOI18N
        BotonGuardar.setText("G");
        BotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarActionPerformed(evt);
            }
        });
        jPanel3.add(BotonGuardar);

        BotonGuardarComo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Navarro/folder/Guardar-como2.png"))); // NOI18N
        BotonGuardarComo.setText("GC");
        BotonGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarComoActionPerformed(evt);
            }
        });
        jPanel3.add(BotonGuardarComo);

        BotonGuardarTodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Navarro/folder/Guardar-Todo2.png"))); // NOI18N
        BotonGuardarTodo.setText("GT");
        BotonGuardarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarTodoActionPerformed(evt);
            }
        });
        jPanel3.add(BotonGuardarTodo);

        BotonCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Navarro/folder/Close-2.png"))); // NOI18N
        BotonCerrar.setText("C");
        BotonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCerrarActionPerformed(evt);
            }
        });
        jPanel3.add(BotonCerrar);

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Navarro/folder/Button-Delete.png"))); // NOI18N
        jButton9.setText("CT");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton9);

        jTabbedPane1.addTab("tab2", jPanel3);

        jButton1.setText("jButton1");
        jPanel2.add(jButton1);

        jButton2.setText("jButton2");
        jPanel2.add(jButton2);

        jTabbedPane1.addTab("tab1", jPanel2);

        jToolBar1.add(jTabbedPane1);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.NORTH);

        jTree1.setModel(null);
        jTree1.setPreferredSize(new java.awt.Dimension(100, 20));
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.LINE_START);

        TBPContedors.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.add(TBPContedors, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenuBar1.setBackground(new java.awt.Color(51, 51, 51));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
   

    private void BotonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonNuevoActionPerformed
    long mkillis=System.currentTimeMillis();
        Timestamp temes=new Timestamp(millis);
        System.out.println(timestamp);
        
        SimpleDateFormate sdf = new SimpleDateFormate("dd/MM/yyyy HH.mm.ss");
        
        
        
        String formateStringDate=sdf.formate(timestamp);
        System.out.println(formatedStrDate);
        // ejemplo de internacionalizacion en java}
        String nombre = JOptionPane.showInputDialog(this, "Introduce el nombre del archivo");
        nombre = nombre.concat(".txt");
        e = new Editor(nombre);
        TBPContedors.add(nombre, e);
        cont++;
    }//GEN-LAST:event_BotonNuevoActionPerformed

    private void BotonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCerrarActionPerformed
try{
    /*// TODO add your handling code here:
        
        e = (Editor) TBPContedors.getSelectedComponent();
        System.out.println(e.getArchivo().getName());
        int seleccion = TBPContedors.getSelectedIndex();
        int cerrar = JOptionPane.showConfirmDialog(TBPContedors, "Desea salir sin guardar?", "Advertencia", JOptionPane.YES_NO_OPTION);
        if (cerrar  == JOptionPane.NO_OPTION) {
            String escritura = e.getjEditorPane1().getText();
            try (FileWriter entrada = new FileWriter(e.getArchivo().getName());
                    BufferedWriter bw = new BufferedWriter(entrada)) {
                bw.write(escritura);
            } catch (IOException e) {
                System.out.println(e);
            }
            JOptionPane.showMessageDialog(null, "Se guardo correctamente");
        }
        TBPContedors.remove(seleccion);*/
        }catch(NullPointerException e){
            
        }
    }//GEN-LAST:event_BotonCerrarActionPerformed

    private void BotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarActionPerformed
        // TODO add your handling code here:
        e = (Editor) TBPContedors.getSelectedComponent();
        String escritura = e.getjEditorPane1().getText();
        try (FileWriter entrada = new FileWriter(e.getArchivo().getName());
                BufferedWriter bw = new BufferedWriter(entrada)) {
            bw.write(escritura);
        } catch (IOException ee) {
            System.out.println(ee);
        }
        JOptionPane.showMessageDialog(null, "Se guardo correctamente");
    }//GEN-LAST:event_BotonGuardarActionPerformed

    private void BotonGuardarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarTodoActionPerformed
try{
    // TODO add your handling code here:
        String[] guardar = new String[cont];
        e = (Editor) TBPContedors.getSelectedComponent();
        for (int i = 0; i < guardar.length; i++) {
            String escritura = e.getjEditorPane1().getText();
            try (FileWriter entrada = new FileWriter(e.getArchivo().getName());
                    BufferedWriter bw = new BufferedWriter(entrada)) {
                bw.write(escritura);
            } catch (IOException ee) {
                System.out.println(ee);
            }
        }
        JOptionPane.showMessageDialog(null, "Todo se guardo correctamente");
        }catch(NullPointerException e){
            
        }
    }//GEN-LAST:event_BotonGuardarTodoActionPerformed

    private void BotonGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarComoActionPerformed
           boolean banderaCreado = false;
        if (banderaCreado == false) {
            JOptionPane.showMessageDialog(null, "abra un archivo para poder cerrarlo");
        } else {
            String extensiones[] = {".jpg", ".txt"};
            String extension = "";
            String nombre = JOptionPane.showInputDialog(this, "ingrese el nombre del archivo y su extension");
            if (nombre == null) {
                int num1 = 0;
                int num2 = 20;
                int numAleatorio = (int) Math.floor(Math.random() * (num1 - num2) + num2);
                String r = String.valueOf(numAleatorio);

                nombre = "ArchivoGenerico" + r;
            }

            String content = .getjEditorPane1().getText();
            try (
                    FileWriter writer = new FileWriter(path + nombre);
                    BufferedWriter bw = new BufferedWriter(writer);) {
                bw.write(content);
                JOptionPane.showMessageDialog(this, "Se ha guardado");
                TBPContedors.setTitleAt(TBPContedors.getSelectedIndex(), nombre);
                Editor.setEditor(false);

            } catch (IOException ex) {
                Logger.getLogger(Archivos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
   
    }//GEN-LAST:event_BotonGuardarComoActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        try {
            // muestra el cuadro de diálogo de archivos, para que el usuario pueda elegir el archivo a abrir
            JFileChooser selectorArchivos = new JFileChooser();
            selectorArchivos.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            
// indica cual fue la accion de usuario sobre el jfilechooser
int resultado = selectorArchivos.showOpenDialog(this);

File archivo = selectorArchivos.getSelectedFile(); // obtiene el archivo seleccionado

// muestra error si es inválido
if ((archivo == null) || (archivo.getName().equals(""))) {
    JOptionPane.showMessageDialog(this, "Nombre de archivo inválido", "Nombre de archivo inválido", JOptionPane.ERROR_MESSAGE);
} // fin de if

Practica1setText(archivo.getAbsolutePath());
Scanner scn = new Scanner(archivo);
while (scn.hasNext()) {
    jtaContenido.insert(scn.nextLine() + "\n", jtaContenido.getText());
}
FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos ", "java","txt");
selectorArchivos.setFileFilter(filtro);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Practica1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        // TODO add your handling code here:
        System.out.println(evt.getSource());
        JOptionPane.showMessageDialog(null,evt.getSource());
        
        System.out.println(evt.getComponent());
        JOptionPane.showMessageDialog(null,evt.getComponent());
        
        //JTree2.getselectionMode().;
    }//GEN-LAST:event_jTree1MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
try{
        /*e = (Editor) TBPContedors.getSelectedComponent();
        System.out.println(e.getArchivo().getName());
        int seleccion = TBPContedors.getSelectedIndex();
        int cerrar = JOptionPane.showConfirmDialog(TBPContedors, "Desea salir sin guardar?", "Advertencia", JOptionPane.YES_NO_OPTION);
        if (cerrar  == JOptionPane.NO_OPTION) {
            String escritura = e.getjEditorPane1().getText();
            try (FileWriter entrada = new FileWriter(e.getArchivo().getName());
                    BufferedWriter bw = new BufferedWriter(entrada)) {
                bw.write(escritura);
            } catch (IOException e) {
                System.out.println(e);
            }
            
        }
        TBPContedors.remove(seleccion);
    
    JOptionPane.showMessageDialog(this,TBPContedors.getSelectedIndex());
        e=(Editor) TBPContedors.getSelectedComponent();
            JOptionPane.showMessageDialog(this, e.getArchivo().getName());
            TBPContedors.setVisible(false);
            JOptionPane.showMessageDialog(null, "Se guardo correctamente");*/
    }catch(NullPointerException e){        
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCerrar;
    private javax.swing.JButton BotonGuardar;
    private javax.swing.JButton BotonGuardarComo;
    private javax.swing.JButton BotonGuardarTodo;
    private javax.swing.JButton BotonNuevo;
    private javax.swing.JTabbedPane TBPContedors;
    private javax.swing.JButton abrir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables

    private void Practica1setText(String absolutePath) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
// jFree
public void leerarchivo(String ruta){
        BufferedReader buffer = null;
        try{
            buffer = new BufferedReader(new InputStreamReader(new FileInputStream(ruta), "ISO-8859-1"));
            boolean lecturanula = false;
            while(!lecturanula){
                try{
                    String linea = buffer.readLine();
                    if(linea == null){
                        lecturanula = true;
                    }else{
                          //System.out.println(linea);
                    }
                }catch(IOException ex){
                    System.out.println(ex);
                }
            }
        }catch(UnsupportedEncodingException ex){

        }catch(FileNotFoundException ex) {

        }finally{
            try{
                buffer.close();
            }catch(IOException ex) {

            }
        }
}

}
